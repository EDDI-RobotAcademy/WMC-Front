{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoginForm from '@/components/account/SignInForm.vue';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport cookies from 'vue-cookies';\nVue.use(cookies);\nexport default {\n  name: 'SignInPage',\n  components: {\n    LoginForm\n  },\n  data() {\n    return {\n      isLogin: false\n    };\n  },\n  mounted() {\n    if (this.$store.state.isAuthenticated != false) {\n      this.isLogin = true;\n    } else {\n      this.isLogin = false;\n    }\n  },\n  methods: {\n    onSubmit(payload) {\n      if (!this.isLogin) {\n        const {\n          email,\n          password\n        } = payload;\n        axios.post('http://localhost:7777/member/sign-in', {\n          email,\n          password\n        }).then(res => {\n          if (res.data) {\n            alert('로그인 성공!');\n            this.$store.state.isAuthenticated = true;\n            this.$cookies.set('user', res.data, 3600);\n            localStorage.setItem('userInfo', JSON.stringify(res.data));\n            this.isLogin = true;\n            this.$router.push('/');\n          } else {\n            alert('아이디 혹은 비밀번호가 존재하지 않거나 틀렸습니다.');\n          }\n        }).catch(res => {\n          alert(res.response.data.message);\n        });\n        const token = JSON.parse(localStorage.getItem('userInfo'));\n        axios.post('http://localhost:7777/cart/validate', token).then(res => {\n          if (res.data) {\n            console.log('인증된 사용자 입니다.');\n            const [memberId, authorityName] = res.data.split(':');\n            localStorage.setItem('memberId', memberId);\n          }\n        });\n      } else {\n        alert('이미 로그인이 되어 있습니다!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["LoginForm","Vue","axios","cookies","use","name","components","data","isLogin","mounted","$store","state","isAuthenticated","methods","onSubmit","payload","email","password","post","then","res","alert","$cookies","set","localStorage","setItem","JSON","stringify","$router","push","catch","response","message","token","parse","getItem","console","log","memberId","authorityName","split"],"sources":["src/views/account/SignInView.vue"],"sourcesContent":["<template>\n  <div>\n    <login-form @submit=\"onSubmit\"></login-form>\n  </div>\n</template>\n\n<script>\nimport LoginForm from '@/components/account/SignInForm.vue';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport cookies from 'vue-cookies';\n\nVue.use(cookies);\n\nexport default {\n  name: 'SignInPage',\n  components: {\n    LoginForm,\n  },\n  data() {\n    return {\n      isLogin: false,\n    };\n  },\n  mounted() {\n    if (this.$store.state.isAuthenticated != false) {\n      this.isLogin = true;\n    } else {\n      this.isLogin = false;\n    }\n  },\n  methods: {\n    onSubmit(payload) {\n      if (!this.isLogin) {\n        const { email, password } = payload;\n        axios\n          .post('http://localhost:7777/member/sign-in', { email, password })\n          .then((res) => {\n            if (res.data) {\n              alert('로그인 성공!');\n              this.$store.state.isAuthenticated = true;\n              this.$cookies.set('user', res.data, 3600);\n              localStorage.setItem('userInfo', JSON.stringify(res.data));\n              this.isLogin = true;\n              this.$router.push('/');\n            } else {\n              alert('아이디 혹은 비밀번호가 존재하지 않거나 틀렸습니다.');\n            }\n          })\n          .catch((res) => {\n            alert(res.response.data.message);\n          });\n        const token = JSON.parse(localStorage.getItem('userInfo'));\n        axios.post('http://localhost:7777/cart/validate', token).then((res) => {\n          if (res.data) {\n            console.log('인증된 사용자 입니다.');\n            const [memberId, authorityName] = res.data.split(':');\n            localStorage.setItem('memberId', memberId)\n          }\n        });\n      } else {\n        alert('이미 로그인이 되어 있습니다!');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";AAOA,OAAAA,SAAA;AACA,OAAAC,GAAA;AACA,OAAAC,KAAA;AACA,OAAAC,OAAA;AAEAF,GAAA,CAAAG,GAAA,CAAAD,OAAA;AAEA;EACAE,IAAA;EACAC,UAAA;IACAN;EACA;EACAO,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,eAAA;MACA,KAAAJ,OAAA;IACA;MACA,KAAAA,OAAA;IACA;EACA;EACAK,OAAA;IACAC,SAAAC,OAAA;MACA,UAAAP,OAAA;QACA;UAAAQ,KAAA;UAAAC;QAAA,IAAAF,OAAA;QACAb,KAAA,CACAgB,IAAA;UAAAF,KAAA;UAAAC;QAAA,GACAE,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAb,IAAA;YACAc,KAAA;YACA,KAAAX,MAAA,CAAAC,KAAA,CAAAC,eAAA;YACA,KAAAU,QAAA,CAAAC,GAAA,SAAAH,GAAA,CAAAb,IAAA;YACAiB,YAAA,CAAAC,OAAA,aAAAC,IAAA,CAAAC,SAAA,CAAAP,GAAA,CAAAb,IAAA;YACA,KAAAC,OAAA;YACA,KAAAoB,OAAA,CAAAC,IAAA;UACA;YACAR,KAAA;UACA;QACA,GACAS,KAAA,CAAAV,GAAA;UACAC,KAAA,CAAAD,GAAA,CAAAW,QAAA,CAAAxB,IAAA,CAAAyB,OAAA;QACA;QACA,MAAAC,KAAA,GAAAP,IAAA,CAAAQ,KAAA,CAAAV,YAAA,CAAAW,OAAA;QACAjC,KAAA,CAAAgB,IAAA,wCAAAe,KAAA,EAAAd,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAb,IAAA;YACA6B,OAAA,CAAAC,GAAA;YACA,OAAAC,QAAA,EAAAC,aAAA,IAAAnB,GAAA,CAAAb,IAAA,CAAAiC,KAAA;YACAhB,YAAA,CAAAC,OAAA,aAAAa,QAAA;UACA;QACA;MACA;QACAjB,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}