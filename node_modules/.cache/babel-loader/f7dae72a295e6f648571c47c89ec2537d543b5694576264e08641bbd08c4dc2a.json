{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as ThemeUtils from './utils';\nimport { getNestedValue } from '../../util/helpers'; // Types\n\nimport Vue from 'vue';\nexport class Theme extends Service {\n  constructor(preset) {\n    super();\n    this.disabled = false;\n    this.isDark = null;\n    this.unwatch = null;\n    this.vueMeta = null;\n    const {\n      dark,\n      disable,\n      options,\n      themes\n    } = preset[Theme.property];\n    this.dark = Boolean(dark);\n    this.defaults = this.themes = themes;\n    this.options = options;\n    if (disable) {\n      this.disabled = true;\n      return;\n    }\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false)\n    };\n  } // When setting css, check for element and apply new values\n\n  /* eslint-disable-next-line accessor-pairs */\n\n  set css(val) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23();\n      }\n      return;\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n  }\n  set dark(val) {\n    const oldDark = this.isDark;\n    this.isDark = val; // Only apply theme after dark\n    // has already been set before\n\n    oldDark != null && this.applyTheme();\n  }\n  get dark() {\n    return Boolean(this.isDark);\n  } // Apply current theme default\n  // only called on client side\n\n  applyTheme() {\n    if (this.disabled) return this.clearCss();\n    this.css = this.generatedStyles;\n  }\n  clearCss() {\n    this.css = '';\n  } // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n\n  init(root, ssrContext) {\n    if (this.disabled) return;\n    /* istanbul ignore else */\n\n    if (root.$meta) {\n      this.initVueMeta(root);\n    } else if (ssrContext) {\n      this.initSSR(ssrContext);\n    }\n    this.initTheme(root);\n  } // Allows for you to set target theme\n\n  setTheme(theme, value) {\n    this.themes[theme] = Object.assign(this.themes[theme], value);\n    this.applyTheme();\n  } // Reset theme defaults\n\n  resetThemes() {\n    this.themes.light = Object.assign({}, this.defaults.light);\n    this.themes.dark = Object.assign({}, this.defaults.dark);\n    this.applyTheme();\n  } // Check for existence of style element\n\n  checkOrCreateStyleElement() {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n    /* istanbul ignore next */\n\n    if (this.styleEl) return true;\n    this.genStyleElement(); // If doesn't have it, create it\n\n    return Boolean(this.styleEl);\n  }\n  fillVariant(theme = {}, dark) {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light'];\n    return Object.assign({}, defaultTheme, theme);\n  } // Generate the style element\n  // if applicable\n\n  genStyleElement() {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return;\n    /* istanbul ignore next */\n\n    this.styleEl = document.createElement('style');\n    this.styleEl.type = 'text/css';\n    this.styleEl.id = 'vuetify-theme-stylesheet';\n    if (this.options.cspNonce) {\n      this.styleEl.setAttribute('nonce', this.options.cspNonce);\n    }\n    document.head.appendChild(this.styleEl);\n  }\n  initVueMeta(root) {\n    this.vueMeta = root.$meta();\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23();\n      });\n      return;\n    }\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n    const metaInfo = root.$options[metaKeyName] || {};\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || [];\n      const vuetifyStylesheet = metaInfo.style.find(s => s.id === 'vuetify-theme-stylesheet');\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce\n        });\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles;\n      }\n      return metaInfo;\n    };\n  }\n  applyVueMeta23() {\n    const {\n      set\n    } = this.vueMeta.addApp('vuetify');\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: this.options.cspNonce\n      }]\n    });\n  }\n  initSSR(ssrContext) {\n    // SSR\n    const nonce = this.options.cspNonce ? ` nonce=\"${this.options.cspNonce}\"` : '';\n    ssrContext.head = ssrContext.head || '';\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`;\n  }\n  initTheme(root) {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return; // If we get here somehow, ensure\n    // existing instance is removed\n\n    if (this.unwatch) {\n      this.unwatch();\n      this.unwatch = null;\n    } // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n    root.$once('hook:created', () => {\n      const obs = Vue.observable({\n        themes: this.themes\n      });\n      this.unwatch = root.$watch(() => obs.themes, () => this.applyTheme(), {\n        deep: true\n      });\n    });\n    this.applyTheme();\n  }\n  get currentTheme() {\n    const target = this.dark ? 'dark' : 'light';\n    return this.themes[target];\n  }\n  get generatedStyles() {\n    const theme = this.parsedTheme;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    let css;\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme);\n      /* istanbul ignore if */\n\n      if (css != null) return css;\n    }\n    css = ThemeUtils.genStyles(theme, options.customProperties);\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css);\n    }\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css);\n    }\n    return css;\n  }\n  get parsedTheme() {\n    return ThemeUtils.parse(this.currentTheme || {}, undefined, getNestedValue(this.options, ['variations'], true));\n  } // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n  get isVueMeta23() {\n    return typeof this.vueMeta.addApp === 'function';\n  }\n}\nTheme.property = 'theme';","map":{"version":3,"names":["Service","ThemeUtils","getNestedValue","Vue","Theme","constructor","preset","disabled","isDark","unwatch","vueMeta","dark","disable","options","themes","property","Boolean","defaults","fillVariant","light","css","val","isVueMeta23","applyVueMeta23","checkOrCreateStyleElement","styleEl","innerHTML","oldDark","applyTheme","clearCss","generatedStyles","init","root","ssrContext","$meta","initVueMeta","initSSR","initTheme","setTheme","theme","value","Object","assign","resetThemes","document","getElementById","genStyleElement","defaultTheme","createElement","type","id","cspNonce","setAttribute","head","appendChild","$nextTick","metaKeyName","getOptions","keyName","metaInfo","$options","style","vuetifyStylesheet","find","s","push","cssText","nonce","set","addApp","$once","obs","observable","$watch","deep","currentTheme","target","parsedTheme","themeCache","get","genStyles","customProperties","minifyTheme","parse","undefined"],"sources":["../../../src/services/theme/index.ts"],"sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\nimport { getNestedValue } from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property: 'theme' = 'theme'\n\n  public disabled = false\n\n  public options: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes\n\n  public defaults: VuetifyThemes\n\n  private isDark = null as boolean | null\n\n  private unwatch = null as (() => void) | null\n\n  private vueMeta = null as any | null\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      dark,\n      disable,\n      options,\n      themes,\n    } = preset[Theme.property]\n\n    this.dark = Boolean(dark)\n    this.defaults = this.themes = themes\n    this.options = options\n\n    if (disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element and apply new values\n  /* eslint-disable-next-line accessor-pairs */\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme(root)\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (this.options.cspNonce) {\n      this.styleEl.setAttribute('nonce', this.options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: this.options.cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    // SSR\n    const nonce = this.options.cspNonce ? ` nonce=\"${this.options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme (root: Vue) {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.unwatch) {\n      this.unwatch()\n      this.unwatch = null\n    }\n\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    root.$once('hook:created', () => {\n      const obs = Vue.observable({ themes: this.themes })\n      this.unwatch = root.$watch(() => obs.themes, () => this.applyTheme(), { deep: true })\n    })\n    this.applyTheme()\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    return ThemeUtils.parse(\n      this.currentTheme || {},\n      undefined,\n      getNestedValue(this.options, ['variations'], true)\n    )\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}