{"ast":null,"code":"// Mixins\nimport Bootable from '../../mixins/bootable';\nimport { factory as GroupableFactory } from '../../mixins/groupable'; // Directives\n\nimport Touch from '../../directives/touch'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, GroupableFactory('windowGroup', 'v-window-item', 'v-window'));\nexport default baseMixins.extend().extend().extend({\n  name: 'v-window-item',\n  directives: {\n    Touch\n  },\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    value: {\n      required: false\n    }\n  },\n  data() {\n    return {\n      isActive: false,\n      inTransition: false\n    };\n  },\n  computed: {\n    classes() {\n      return this.groupClasses;\n    },\n    computedTransition() {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined' ? this.transition || '' : this.windowGroup.computedTransition;\n      }\n      return typeof this.reverseTransition !== 'undefined' ? this.reverseTransition || '' : this.windowGroup.computedTransition;\n    }\n  },\n  methods: {\n    genDefaultSlot() {\n      return this.$slots.default;\n    },\n    genWindowItem() {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }],\n        on: this.$listeners\n      }, this.genDefaultSlot());\n    },\n    onAfterTransition() {\n      if (!this.inTransition) {\n        return;\n      } // Finalize transition state.\n\n      this.inTransition = false;\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--; // Remove container height if we are out of transition.\n\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined;\n        }\n      }\n    },\n    onBeforeTransition() {\n      if (this.inTransition) {\n        return;\n      } // Initialize transition state here.\n\n      this.inTransition = true;\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight);\n      }\n      this.windowGroup.transitionCount++;\n    },\n    onTransitionCancelled() {\n      this.onAfterTransition(); // This should have the same path as normal transition end.\n    },\n\n    onEnter(el) {\n      if (!this.inTransition) {\n        return;\n      }\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return;\n        } // Set transition target height.\n\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight);\n      });\n    }\n  },\n  render(h) {\n    return h('transition', {\n      props: {\n        name: this.computedTransition\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n        // Enter handler for height transition.\n        enter: this.onEnter\n      }\n    }, this.showLazyContent(() => [this.genWindowItem()]));\n  }\n});","map":{"version":3,"names":["Bootable","factory","GroupableFactory","Touch","convertToUnit","mixins","baseMixins","extend","name","directives","props","disabled","Boolean","reverseTransition","type","String","default","undefined","transition","value","required","data","isActive","inTransition","computed","classes","groupClasses","computedTransition","windowGroup","internalReverse","methods","genDefaultSlot","$slots","genWindowItem","$createElement","staticClass","class","on","$listeners","onAfterTransition","transitionCount","transitionHeight","onBeforeTransition","$el","clientHeight","onTransitionCancelled","onEnter","el","$nextTick","render","h","beforeEnter","afterEnter","enterCancelled","beforeLeave","afterLeave","leaveCancelled","enter","showLazyContent"],"sources":["../../../src/components/VWindow/VWindowItem.ts"],"sourcesContent":["// Components\nimport VWindow from './VWindow'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  GroupableFactory('windowGroup', 'v-window-item', 'v-window')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  windowGroup: InstanceType<typeof VWindow>\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-window-item',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    value: {\n      required: false,\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n      inTransition: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return this.groupClasses\n    },\n    computedTransition (): string | boolean {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined'\n          ? this.transition || ''\n          : this.windowGroup.computedTransition\n      }\n\n      return typeof this.reverseTransition !== 'undefined'\n        ? this.reverseTransition || ''\n        : this.windowGroup.computedTransition\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$slots.default\n    },\n    genWindowItem () {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n        on: this.$listeners,\n      }, this.genDefaultSlot())\n    },\n    onAfterTransition () {\n      if (!this.inTransition) {\n        return\n      }\n\n      // Finalize transition state.\n      this.inTransition = false\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--\n\n        // Remove container height if we are out of transition.\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined\n        }\n      }\n    },\n    onBeforeTransition () {\n      if (this.inTransition) {\n        return\n      }\n\n      // Initialize transition state here.\n      this.inTransition = true\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight)\n      }\n      this.windowGroup.transitionCount++\n    },\n    onTransitionCancelled () {\n      this.onAfterTransition() // This should have the same path as normal transition end.\n    },\n    onEnter (el: HTMLElement) {\n      if (!this.inTransition) {\n        return\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return\n        }\n\n        // Set transition target height.\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      props: {\n        name: this.computedTransition,\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n\n        // Enter handler for height transition.\n        enter: this.onEnter,\n      },\n    }, this.showLazyContent(() => [this.genWindowItem()]))\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}