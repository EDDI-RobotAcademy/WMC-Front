{"ast":null,"code":"import { REQUEST_PRODUCT_LIST_TO_SPRING, REQUEST_MAIN_PRODUCT_LIST_TO_SPRING, REQUEST_NOTICE_LIST_TO_SPRING } from './mutation-types';\nimport axios from 'axios';\nexport default {\n  requestCreateProductToSpring({}, payload) {\n    const {\n      name,\n      description,\n      price,\n      stock,\n      files\n    } = payload;\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('price', price);\n    formData.append('stock', stock);\n    for (let idx = 0; idx < files.length; idx++) {\n      formData.append('fileList[' + idx + ']', files[idx]);\n    }\n    return axios.post('http://localhost:7777/product/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(() => {\n      alert('상품 등록 성공!');\n    }).catch(() => {\n      alert('문제 발생!');\n    });\n  },\n  requestProductListToSpring({\n    commit\n  }) {\n    return axios.get('http://localhost:7777/product/list').then(res => {\n      commit(REQUEST_PRODUCT_LIST_TO_SPRING, res.data);\n    });\n  },\n  requestMainProductListToSpring({\n    commit\n  }) {\n    return axios.get('http://localhost:7777/product/list').then(res => {\n      commit(REQUEST_MAIN_PRODUCT_LIST_TO_SPRING, res.data);\n    });\n  },\n  requestCreateNoticeToSpring({}, payload) {\n    const {\n      title,\n      content,\n      writer\n    } = payload;\n    return axios.post('http://localhost:7777/notice/register', {\n      title,\n      content,\n      writer\n    }).then(() => {\n      alert('공지사항 등록 성공!');\n    }).catch(() => {\n      alert('문제 발생!');\n    });\n  },\n  requestNoticeListToSpring({\n    commit\n  }) {\n    return axios.get('http://localhost:7777/notice/list').then(res => {\n      commit(REQUEST_NOTICE_LIST_TO_SPRING, res.data);\n    });\n  }\n};","map":{"version":3,"names":["REQUEST_PRODUCT_LIST_TO_SPRING","REQUEST_MAIN_PRODUCT_LIST_TO_SPRING","REQUEST_NOTICE_LIST_TO_SPRING","axios","requestCreateProductToSpring","payload","name","description","price","stock","files","formData","FormData","append","idx","length","post","headers","then","alert","catch","requestProductListToSpring","commit","get","res","data","requestMainProductListToSpring","requestCreateNoticeToSpring","title","content","writer","requestNoticeListToSpring"],"sources":["/Users/jonginhan/Documents/GitHub/finalProject/WMC-Front/frontend/src/store/actions.js"],"sourcesContent":["import { \n    REQUEST_PRODUCT_LIST_TO_SPRING ,\n    REQUEST_MAIN_PRODUCT_LIST_TO_SPRING ,\n    REQUEST_NOTICE_LIST_TO_SPRING,\n} from './mutation-types';\n\nimport axios from 'axios';\n\nexport default {\n  requestCreateProductToSpring({}, payload) {\n    const { name, description, price, stock, files } = payload;\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('price', price);\n    formData.append('stock', stock);\n    for (let idx = 0; idx < files.length; idx++) {\n      formData.append('fileList[' + idx + ']', files[idx]);\n    }\n    return axios\n      .post('http://localhost:7777/product/register', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(() => {\n        alert('상품 등록 성공!');\n      })\n      .catch(() => {\n        alert('문제 발생!');\n      });\n  },\n\n  requestProductListToSpring({ commit }) {\n    return axios.get('http://localhost:7777/product/list').then((res) => {\n      commit(REQUEST_PRODUCT_LIST_TO_SPRING, res.data);\n    });\n  },\n  requestMainProductListToSpring({ commit }) {\n    return axios.get('http://localhost:7777/product/list').then((res) => {\n      commit(REQUEST_MAIN_PRODUCT_LIST_TO_SPRING, res.data);\n    });\n  },\n  \n\n  requestCreateNoticeToSpring({ }, payload) {\n\n    const { title, content, writer } = payload\n    return axios.post('http://localhost:7777/notice/register',\n      { title, content, writer })\n      .then(() => {\n        alert('공지사항 등록 성공!')\n      })\n      .catch(() => {\n        alert('문제 발생!')\n      })\n  },\n  requestNoticeListToSpring({ commit }) {\n    return axios.get('http://localhost:7777/notice/list')\n      .then((res) => {\n        commit(REQUEST_NOTICE_LIST_TO_SPRING, res.data)\n      })\n  }\n  \n};\n\n"],"mappings":"AAAA,SACIA,8BAA8B,EAC9BC,mCAAmC,EACnCC,6BAA6B,QAC1B,kBAAkB;AAEzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe;EACbC,4BAA4BA,CAAC,CAAC,CAAC,EAAEC,OAAO,EAAE;IACxC,MAAM;MAAEC,IAAI;MAAEC,WAAW;MAAEC,KAAK;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGL,OAAO;IAC1D,IAAIM,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;IAC7BK,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEN,WAAW,CAAC;IAC3CI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC/BG,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/B,KAAK,IAAIK,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGJ,KAAK,CAACK,MAAM,EAAED,GAAG,EAAE,EAAE;MAC3CH,QAAQ,CAACE,MAAM,CAAC,WAAW,GAAGC,GAAG,GAAG,GAAG,EAAEJ,KAAK,CAACI,GAAG,CAAC,CAAC;IACtD;IACA,OAAOX,KAAK,CACTa,IAAI,CAAC,wCAAwC,EAAEL,QAAQ,EAAE;MACxDM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;MACVC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXD,KAAK,CAAC,QAAQ,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAEDE,0BAA0BA,CAAC;IAAEC;EAAO,CAAC,EAAE;IACrC,OAAOnB,KAAK,CAACoB,GAAG,CAAC,oCAAoC,CAAC,CAACL,IAAI,CAAEM,GAAG,IAAK;MACnEF,MAAM,CAACtB,8BAA8B,EAAEwB,GAAG,CAACC,IAAI,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC;EACDC,8BAA8BA,CAAC;IAAEJ;EAAO,CAAC,EAAE;IACzC,OAAOnB,KAAK,CAACoB,GAAG,CAAC,oCAAoC,CAAC,CAACL,IAAI,CAAEM,GAAG,IAAK;MACnEF,MAAM,CAACrB,mCAAmC,EAAEuB,GAAG,CAACC,IAAI,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAGDE,2BAA2BA,CAAC,CAAE,CAAC,EAAEtB,OAAO,EAAE;IAExC,MAAM;MAAEuB,KAAK;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAGzB,OAAO;IAC1C,OAAOF,KAAK,CAACa,IAAI,CAAC,uCAAuC,EACvD;MAAEY,KAAK;MAAEC,OAAO;MAAEC;IAAO,CAAC,CAAC,CAC1BZ,IAAI,CAAC,MAAM;MACVC,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXD,KAAK,CAAC,QAAQ,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EACDY,yBAAyBA,CAAC;IAAET;EAAO,CAAC,EAAE;IACpC,OAAOnB,KAAK,CAACoB,GAAG,CAAC,mCAAmC,CAAC,CAClDL,IAAI,CAAEM,GAAG,IAAK;MACbF,MAAM,CAACpB,6BAA6B,EAAEsB,GAAG,CAACC,IAAI,CAAC;IACjD,CAAC,CAAC;EACN;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}