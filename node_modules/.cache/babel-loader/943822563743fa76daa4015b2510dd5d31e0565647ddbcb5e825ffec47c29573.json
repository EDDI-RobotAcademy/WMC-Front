{"ast":null,"code":"import { REQUEST_PRODUCT_LIST_TO_SPRING, REQUEST_MAIN_PRODUCT_LIST_TO_SPRING, REQUEST_NOTICE_LIST_TO_SPRING, REQUEST_NOTICE_TO_SPRING } from './mutation-types';\nexport default {\n  [REQUEST_PRODUCT_LIST_TO_SPRING](state, passingData) {\n    if (!passingData) {\n      console.error('The data passed to REQUEST_PRODUCT_LIST_TO_SPRING mutation is undefined');\n      return;\n    }\n    state.products = passingData.map(productResponse => ({\n      ...productResponse,\n      imageDataList: productResponse.imageDataList\n    }));\n  },\n  [REQUEST_MAIN_PRODUCT_LIST_TO_SPRING](state, passingData) {\n    if (!passingData) {\n      console.error('The data passed to REQUEST_MAIN_PRODUCT_LIST_TO_SPRING mutation is undefined');\n      return;\n    }\n    state.products = passingData.map(productResponse => ({\n      ...productResponse,\n      imageDataList: productResponse.imageDataList\n    }));\n  },\n  [REQUEST_NOTICE_LIST_TO_SPRING](state, passingData) {\n    state.notices = passingData.map(noticeResponse => ({\n      ...noticeResponse\n    }));\n  }\n};","map":{"version":3,"names":["REQUEST_PRODUCT_LIST_TO_SPRING","REQUEST_MAIN_PRODUCT_LIST_TO_SPRING","REQUEST_NOTICE_LIST_TO_SPRING","REQUEST_NOTICE_TO_SPRING","state","passingData","console","error","products","map","productResponse","imageDataList","notices","noticeResponse"],"sources":["/Users/jonginhan/Documents/GitHub/finalProject/WMC-Front/frontend/src/store/mutations.js"],"sourcesContent":["import {\n    REQUEST_PRODUCT_LIST_TO_SPRING,\n    REQUEST_MAIN_PRODUCT_LIST_TO_SPRING,\n    \n    REQUEST_NOTICE_LIST_TO_SPRING,\n    REQUEST_NOTICE_TO_SPRING,\n} from './mutation-types'\n\n\n\nexport default {\n    [REQUEST_PRODUCT_LIST_TO_SPRING](state, passingData) {\n        if (!passingData) {\n          console.error('The data passed to REQUEST_PRODUCT_LIST_TO_SPRING mutation is undefined');\n          return;\n        }\n      \n        state.products = passingData.map(productResponse => ({\n          ...productResponse,\n          imageDataList: productResponse.imageDataList\n        }));\n      },\n    [REQUEST_MAIN_PRODUCT_LIST_TO_SPRING](state, passingData) {\n        if (!passingData) {\n          console.error('The data passed to REQUEST_MAIN_PRODUCT_LIST_TO_SPRING mutation is undefined');\n          return;\n        }\n      \n        state.products = passingData.map(productResponse => ({\n          ...productResponse,\n          imageDataList: productResponse.imageDataList\n        }));\n      },\n\n\n    [REQUEST_NOTICE_LIST_TO_SPRING] (state, passingData) {\n      state.notices = passingData.map(noticeResponse => ({\n        ...noticeResponse\n      }));\n    },\n    \n\n}"],"mappings":"AAAA,SACIA,8BAA8B,EAC9BC,mCAAmC,EAEnCC,6BAA6B,EAC7BC,wBAAwB,QACrB,kBAAkB;AAIzB,eAAe;EACX,CAACH,8BAA8B,EAAEI,KAAK,EAAEC,WAAW,EAAE;IACjD,IAAI,CAACA,WAAW,EAAE;MAChBC,OAAO,CAACC,KAAK,CAAC,yEAAyE,CAAC;MACxF;IACF;IAEAH,KAAK,CAACI,QAAQ,GAAGH,WAAW,CAACI,GAAG,CAACC,eAAe,KAAK;MACnD,GAAGA,eAAe;MAClBC,aAAa,EAAED,eAAe,CAACC;IACjC,CAAC,CAAC,CAAC;EACL,CAAC;EACH,CAACV,mCAAmC,EAAEG,KAAK,EAAEC,WAAW,EAAE;IACtD,IAAI,CAACA,WAAW,EAAE;MAChBC,OAAO,CAACC,KAAK,CAAC,8EAA8E,CAAC;MAC7F;IACF;IAEAH,KAAK,CAACI,QAAQ,GAAGH,WAAW,CAACI,GAAG,CAACC,eAAe,KAAK;MACnD,GAAGA,eAAe;MAClBC,aAAa,EAAED,eAAe,CAACC;IACjC,CAAC,CAAC,CAAC;EACL,CAAC;EAGH,CAACT,6BAA6B,EAAGE,KAAK,EAAEC,WAAW,EAAE;IACnDD,KAAK,CAACQ,OAAO,GAAGP,WAAW,CAACI,GAAG,CAACI,cAAc,KAAK;MACjD,GAAGA;IACL,CAAC,CAAC,CAAC;EACL;AAGJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}