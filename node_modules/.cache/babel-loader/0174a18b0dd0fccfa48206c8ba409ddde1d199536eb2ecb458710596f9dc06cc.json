{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Carousel, Slide } from 'vue-carousel';\nimport { mapState } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'ProductList',\n  components: {\n    Carousel,\n    Slide\n  },\n  props: {\n    products: {\n      type: Array\n    }\n  },\n  data() {\n    return {\n      memberId: localStorage.getItem('memberId'),\n      authorityName: localStorage.getItem('authorityName'),\n      cart: []\n    };\n  },\n  computed: {\n    ...mapState(['isAuthenticated']),\n    total() {\n      let sum = 0;\n      for (let item of this.cart) {\n        sum += item.price * item.quantity;\n      }\n      return sum;\n    }\n  },\n  mounted() {\n    if (localStorage.getItem('userInfo')) {\n      this.$store.state.isAuthenticated = true;\n    } else {\n      this.$store.state.isAuthenticated = false;\n    }\n  },\n  methods: {\n    addToCart(product, quantity = 1) {\n      if (!this.isAuthenticated) {\n        alert('로그인 먼저 하세용^_^');\n        this.$router.push('/sign-in');\n        return;\n      }\n      if (memberId && authorityName) {\n        const cartKey = `cart_${memberId}`;\n        let cart = localStorage.getItem(cartKey);\n        if (!cart) {\n          cart = [];\n        } else {\n          cart = JSON.parse(cart);\n        }\n        const existingCartItem = cart.find(item => item.product_id === product.productId);\n        if (existingCartItem) {\n          existingCartItem.quantity += quantity;\n        } else {\n          cart.push({\n            product_id: product.productId,\n            name: product.name,\n            image: product.firstPhoto ? this.getImagePath(product.firstPhoto) : '',\n            price: product.price,\n            quantity: quantity\n          });\n        }\n        localStorage.setItem(cartKey, JSON.stringify(cart));\n        console.log('Cart:', cart);\n        alert('장바구니에 추가되었습니다!');\n      }\n    },\n    getImagePath(imageData) {\n      console.log('imageData:', imageData);\n      return require(`@/${imageData}`);\n    }\n  }\n};","map":{"version":3,"names":["Carousel","Slide","mapState","axios","name","components","props","products","type","Array","data","memberId","localStorage","getItem","authorityName","cart","computed","total","sum","item","price","quantity","mounted","$store","state","isAuthenticated","methods","addToCart","product","alert","$router","push","cartKey","JSON","parse","existingCartItem","find","product_id","productId","image","firstPhoto","getImagePath","setItem","stringify","console","log","imageData","require"],"sources":["src/components/product/ProductList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <router-link to=\"/product-register-page\">\n          <v-btn v-if=\"authorityName === 'MANAGER'\" color=\"#a1887f\" outlined\n            >상품 등록 하러가기</v-btn\n          >\n        </router-link>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col\n        v-if=\"!products || (Array.isArray(products) && products.length === 0)\"\n      >\n        현재 등록된 상품이 없습니다!\n      </v-col>\n      <v-col\n        v-else\n        v-for=\"(product, index) in products\"\n        :key=\"product.productId\"\n        cols=\"12\"\n        sm=\"6\"\n        md=\"4\"\n      >\n        <v-card>\n          <v-img\n            :src=\"product.firstPhoto ? getImagePath(product.firstPhoto) : ''\"\n            aspect-ratio=\"1\"\n            class=\"grey lighten-2\"\n          ></v-img>\n\n          <v-card-title>{{ product.name }}</v-card-title>\n          <v-card-text>{{ product.description }}</v-card-text>\n          <v-card-subtitle>{{ product.price }}₩</v-card-subtitle>\n          <v-card-actions>\n            <v-btn small color=\"#a1887f\" @click=\"addToCart(product)\"\n              >장바구니에 담기</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { Carousel, Slide } from 'vue-carousel';\nimport { mapState } from 'vuex';\nimport axios from 'axios';\n\nexport default {\n  name: 'ProductList',\n  components: {\n    Carousel,\n    Slide,\n  },\n  props: {\n    products: {\n      type: Array,\n    },\n  },\n  data() {\n    return {\n      memberId: localStorage.getItem('memberId'),\n      authorityName: localStorage.getItem('authorityName'),\n      cart: [],\n    };\n  },\n  \n  computed: {\n    ...mapState(['isAuthenticated']),\n\n    total() {\n      let sum = 0;\n      for (let item of this.cart) {\n        sum += item.price * item.quantity;\n      }\n      return sum;\n    },\n  },\n  mounted() {\n    if (localStorage.getItem('userInfo')) {\n      this.$store.state.isAuthenticated = true;\n    } else {\n      this.$store.state.isAuthenticated = false;\n    }\n  },\n  methods: {\n    addToCart(product, quantity = 1) {\n      if (!this.isAuthenticated) {\n        alert('로그인 먼저 하세용^_^');\n        this.$router.push('/sign-in');\n        return;\n      }\n\n      if(memberId && authorityName) {\n      const cartKey = `cart_${memberId}`;\n      let cart = localStorage.getItem(cartKey);\n      if (!cart) {\n        cart = [];\n      } else {\n        cart = JSON.parse(cart);\n      }\n\n      const existingCartItem = cart.find(\n        (item) => item.product_id === product.productId\n      );\n\n      if (existingCartItem) {\n        existingCartItem.quantity += quantity;\n      } else {\n        cart.push({\n          product_id: product.productId,\n          name: product.name,\n          image: product.firstPhoto\n            ? this.getImagePath(product.firstPhoto)\n            : '',\n          price: product.price,\n          quantity: quantity,\n        });\n      }\n\n      localStorage.setItem(cartKey, JSON.stringify(cart));\n      console.log('Cart:', cart);\n      alert('장바구니에 추가되었습니다!');\n    }\n    },\n    getImagePath(imageData) {\n      console.log('imageData:', imageData);\n      return require(`@/${imageData}`);\n    },\n  },\n};\n</script>\n\n<style>\n.shopping-mall {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.products-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n}\n.product {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 200px;\n}\n.cart-container {\n  margin-top: 50px;\n}\n</style>\n"],"mappings":";AA+CA,SAAAA,QAAA,EAAAC,KAAA;AACA,SAAAC,QAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,QAAA;IACAC;EACA;EACAK,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC;IACA;EACA;EACAC,KAAA;IACA;MACAC,QAAA,EAAAC,YAAA,CAAAC,OAAA;MACAC,aAAA,EAAAF,YAAA,CAAAC,OAAA;MACAE,IAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAAd,QAAA;IAEAe,MAAA;MACA,IAAAC,GAAA;MACA,SAAAC,IAAA,SAAAJ,IAAA;QACAG,GAAA,IAAAC,IAAA,CAAAC,KAAA,GAAAD,IAAA,CAAAE,QAAA;MACA;MACA,OAAAH,GAAA;IACA;EACA;EACAI,QAAA;IACA,IAAAV,YAAA,CAAAC,OAAA;MACA,KAAAU,MAAA,CAAAC,KAAA,CAAAC,eAAA;IACA;MACA,KAAAF,MAAA,CAAAC,KAAA,CAAAC,eAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,OAAA,EAAAP,QAAA;MACA,UAAAI,eAAA;QACAI,KAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;QACA;MACA;MAEA,IAAApB,QAAA,IAAAG,aAAA;QACA,MAAAkB,OAAA,WAAArB,QAAA;QACA,IAAAI,IAAA,GAAAH,YAAA,CAAAC,OAAA,CAAAmB,OAAA;QACA,KAAAjB,IAAA;UACAA,IAAA;QACA;UACAA,IAAA,GAAAkB,IAAA,CAAAC,KAAA,CAAAnB,IAAA;QACA;QAEA,MAAAoB,gBAAA,GAAApB,IAAA,CAAAqB,IAAA,CACAjB,IAAA,IAAAA,IAAA,CAAAkB,UAAA,KAAAT,OAAA,CAAAU,SAAA,CACA;QAEA,IAAAH,gBAAA;UACAA,gBAAA,CAAAd,QAAA,IAAAA,QAAA;QACA;UACAN,IAAA,CAAAgB,IAAA;YACAM,UAAA,EAAAT,OAAA,CAAAU,SAAA;YACAlC,IAAA,EAAAwB,OAAA,CAAAxB,IAAA;YACAmC,KAAA,EAAAX,OAAA,CAAAY,UAAA,GACA,KAAAC,YAAA,CAAAb,OAAA,CAAAY,UAAA,IACA;YACApB,KAAA,EAAAQ,OAAA,CAAAR,KAAA;YACAC,QAAA,EAAAA;UACA;QACA;QAEAT,YAAA,CAAA8B,OAAA,CAAAV,OAAA,EAAAC,IAAA,CAAAU,SAAA,CAAA5B,IAAA;QACA6B,OAAA,CAAAC,GAAA,UAAA9B,IAAA;QACAc,KAAA;MACA;IACA;IACAY,aAAAK,SAAA;MACAF,OAAA,CAAAC,GAAA,eAAAC,SAAA;MACA,OAAAC,OAAA,MAAAD,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}