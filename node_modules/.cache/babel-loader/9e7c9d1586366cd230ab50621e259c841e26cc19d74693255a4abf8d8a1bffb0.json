{"ast":null,"code":"// Styles\nimport \"../../../src/components/VList/VListItem.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Routable from '../../mixins/routable';\nimport { factory as GroupableFactory } from '../../mixins/groupable';\nimport Themeable from '../../mixins/themeable';\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'; // Directives\n\nimport Ripple from '../../directives/ripple'; // Utilities\n\nimport { keyCodes } from './../../util/helpers';\nimport { removed } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Colorable, Routable, Themeable, GroupableFactory('listItemGroup'), ToggleableFactory('inputValue'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-list-item',\n  directives: {\n    Ripple\n  },\n  inject: {\n    isInGroup: {\n      default: false\n    },\n    isInList: {\n      default: false\n    },\n    isInMenu: {\n      default: false\n    },\n    isInNav: {\n      default: false\n    }\n  },\n  inheritAttrs: false,\n  props: {\n    activeClass: {\n      type: String,\n      default() {\n        if (!this.listItemGroup) return '';\n        return this.listItemGroup.activeClass;\n      }\n    },\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null\n  },\n  data: () => ({\n    proxyClass: 'v-list-item--active'\n  }),\n  computed: {\n    classes() {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses\n      };\n    },\n    isClickable() {\n      return Boolean(Routable.options.computed.isClickable.call(this) || this.listItemGroup);\n    }\n  },\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this);\n    }\n  },\n  methods: {\n    click(e) {\n      if (e.detail) this.$el.blur();\n      this.$emit('click', e);\n      this.to || this.toggle();\n    },\n    genAttrs() {\n      const attrs = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs\n      };\n      if (this.$attrs.hasOwnProperty('role')) {// do nothing, role already provided\n      } else if (this.isInNav) {// do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option';\n        attrs['aria-selected'] = String(this.isActive);\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined;\n        attrs.id = attrs.id || `list-item-${this._uid}`;\n      } else if (this.isInList) {\n        attrs.role = 'listitem';\n      }\n      return attrs;\n    },\n    toggle() {\n      if (this.to && this.inputValue === undefined) {\n        this.isActive = !this.isActive;\n      }\n      this.$emit('change');\n    }\n  },\n  render(h) {\n    let {\n      tag,\n      data\n    } = this.generateRouteLink();\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs()\n    };\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: e => {\n        if (!this.disabled) {\n          /* istanbul ignore else */\n          if (e.keyCode === keyCodes.enter) this.click(e);\n          this.$emit('keydown', e);\n        }\n      }\n    };\n    if (this.inactive) tag = 'div';\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn;\n      delete data.nativeOn;\n    }\n    const children = this.$scopedSlots.default ? this.$scopedSlots.default({\n      active: this.isActive,\n      toggle: this.toggle\n    }) : this.$slots.default;\n    return h(tag, this.isActive ? this.setTextColor(this.color, data) : data, children);\n  }\n});","map":{"version":3,"names":["Colorable","Routable","factory","GroupableFactory","Themeable","ToggleableFactory","Ripple","keyCodes","removed","mixins","baseMixins","extend","name","directives","inject","isInGroup","default","isInList","isInMenu","isInNav","inheritAttrs","props","activeClass","type","String","listItemGroup","dense","Boolean","inactive","link","selectable","tag","threeLine","twoLine","value","data","proxyClass","computed","classes","options","call","disabled","isClickable","themeClasses","created","$attrs","hasOwnProperty","methods","click","e","detail","$el","blur","$emit","to","toggle","genAttrs","attrs","undefined","tabindex","role","isActive","id","_uid","inputValue","render","h","generateRouteLink","keydown","keyCode","enter","on","nativeOn","children","$scopedSlots","active","$slots","setTextColor","color"],"sources":["../../../src/components/VList/VListItem.ts"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropType, PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n        attrs.id = attrs.id || `list-item-${this._uid}`\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n    toggle () {\n      if (this.to && this.inputValue === undefined) {\n        this.isActive = !this.isActive\n      }\n      this.$emit('change')\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: (e: KeyboardEvent) => {\n        if (!this.disabled) {\n          /* istanbul ignore else */\n          if (e.keyCode === keyCodes.enter) this.click(e)\n\n          this.$emit('keydown', e)\n        }\n      },\n    }\n\n    if (this.inactive) tag = 'div'\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn\n      delete data.nativeOn\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    return h(tag, this.isActive ? this.setTextColor(this.color, data) : data, children)\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}