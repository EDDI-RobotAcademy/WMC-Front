{"ast":null,"code":"export default {\n  data() {\n    return {\n      userId: \"your_user_id\",\n      // Replace this with the actual user ID\n      items: {}\n    };\n  },\n  methods: {\n    async fetchBasketItems() {\n      try {\n        const response = await fetch(`/basket/items?userId=${this.userId}`);\n        const data = await response.json();\n        this.items = data;\n      } catch (error) {\n        console.error(\"Error fetching basket items:\", error);\n      }\n    },\n    async updateItemQuantity(itemId, newQuantity) {\n      if (newQuantity < 0) return;\n      try {\n        await fetch(`/basket/update?userId=${this.userId}&itemId=${itemId}&quantity=${newQuantity}`, {\n          method: \"POST\"\n        });\n        this.items[itemId] = newQuantity;\n      } catch (error) {\n        console.error(\"Error updating item quantity:\", error);\n      }\n    },\n    async removeItem(itemId) {\n      try {\n        await fetch(`/basket/remove?userId=${this.userId}&itemId=${itemId}`, {\n          method: \"POST\"\n        });\n        delete this.items[itemId];\n      } catch (error) {\n        console.error(\"Error removing item from basket:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchBasketItems();\n  }\n};","map":{"version":3,"names":["data","userId","items","methods","fetchBasketItems","response","fetch","json","error","console","updateItemQuantity","itemId","newQuantity","method","removeItem","mounted"],"sources":["src/components/order/ShoppingCart.vue"],"sourcesContent":["<template>\n    <div class=\"shopping-cart\">\n      <h2>Shopping Cart</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Item ID</th>\n            <th>Quantity</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(quantity, itemId) in items\" :key=\"itemId\">\n            <td>{{ itemId }}</td>\n            <td>{{ quantity }}</td>\n            <td>\n              <button @click=\"updateItemQuantity(itemId, quantity - 1)\">-</button>\n              <button @click=\"updateItemQuantity(itemId, quantity + 1)\">+</button>\n              <button @click=\"removeItem(itemId)\">Remove</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        userId: \"your_user_id\", // Replace this with the actual user ID\n        items: {},\n      };\n    },\n    methods: {\n      async fetchBasketItems() {\n        try {\n          const response = await fetch(`/basket/items?userId=${this.userId}`);\n          const data = await response.json();\n          this.items = data;\n        } catch (error) {\n          console.error(\"Error fetching basket items:\", error);\n        }\n      },\n      async updateItemQuantity(itemId, newQuantity) {\n        if (newQuantity < 0) return;\n  \n        try {\n          await fetch(`/basket/update?userId=${this.userId}&itemId=${itemId}&quantity=${newQuantity}`, {\n            method: \"POST\",\n          });\n          this.items[itemId] = newQuantity;\n        } catch (error) {\n          console.error(\"Error updating item quantity:\", error);\n        }\n      },\n      async removeItem(itemId) {\n        try {\n          await fetch(`/basket/remove?userId=${this.userId}&itemId=${itemId}`, {\n            method: \"POST\",\n          });\n          delete this.items[itemId];\n        } catch (error) {\n          console.error(\"Error removing item from basket:\", error);\n        }\n      },\n    },\n    mounted() {\n      this.fetchBasketItems();\n    },\n  };\n  </script>\n  \n  <style scoped>\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  \n  th,\n  td {\n    border: 1px solid #ccc;\n    padding: 8px;\n    text-align: left;\n  }\n  \n  th {\n    background-color: #f2f2f2;\n  }\n  </style>\n  "],"mappings":"AA2BA;EACAA,KAAA;IACA;MACAC,MAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,iBAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA,8BAAAL,MAAA;QACA,MAAAD,IAAA,SAAAK,QAAA,CAAAE,IAAA;QACA,KAAAL,KAAA,GAAAF,IAAA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;MACA;IACA;IACA,MAAAE,mBAAAC,MAAA,EAAAC,WAAA;MACA,IAAAA,WAAA;MAEA;QACA,MAAAN,KAAA,+BAAAL,MAAA,WAAAU,MAAA,aAAAC,WAAA;UACAC,MAAA;QACA;QACA,KAAAX,KAAA,CAAAS,MAAA,IAAAC,WAAA;MACA,SAAAJ,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;MACA;IACA;IACA,MAAAM,WAAAH,MAAA;MACA;QACA,MAAAL,KAAA,+BAAAL,MAAA,WAAAU,MAAA;UACAE,MAAA;QACA;QACA,YAAAX,KAAA,CAAAS,MAAA;MACA,SAAAH,KAAA;QACAC,OAAA,CAAAD,KAAA,qCAAAA,KAAA;MACA;IACA;EACA;EACAO,QAAA;IACA,KAAAX,gBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}